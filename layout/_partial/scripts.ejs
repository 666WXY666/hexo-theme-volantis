<%- js(theme.plugins.jquery) %>
<script src="https://cdn.jsdelivr.net/npm/pjax@0.2.8/pjax.min.js"></script>
<script>
var pjax = new Pjax({
    elements: 'a[href]:not([href^="#"]):not([href="javascript:void(0)"])',
    selectors: ["#pjax-container","title","meta",".nav-sub.container.container--flex"]
});
</script>
<% if (theme.search && theme.search.enable) { %>
  <script>
    <% if(theme.search.service === 'baidu') { %>
      var BAIDU_API_ID = "<%- config.baidu.apiId %>";
    <%} else if(theme.search.service === 'algolia') { %>
      var ALGOLIA_API_KEY = "<%- config.algolia.apiKey %>";
      var ALGOLIA_APP_ID = "<%- config.algolia.applicationID %>";
      var ALGOLIA_INDEX_NAME = "<%- config.algolia.indexName %>";
    <%} else if(theme.search.service === 'azure') { %>
      var AZURE_QUERY_KEY = "<%- config.azure.queryKey %>";
      var AZURE_INDEX_NAME = "<%- config.azure.indexName %>";
      var AZURE_SERVICE_NAME = "<%- config.azure.serviceName %>";
    <%} else if(theme.search.service === 'google') { %>
      var GOOGLE_CUSTOM_SEARCH_API_KEY = "<%- config.google.apiKey %>";
      var GOOGLE_CUSTOM_SEARCH_ENGINE_ID = "<%- config.google.engineId %>";
    <%}%>
    var SEARCH_SERVICE = "<%- theme.search.service%>" || "hexo";
    var ROOT = "<%- config.root %>" || "/";
    if (!ROOT.endsWith('/')) ROOT += '/';
  </script>
<% } %>
<% if (theme.plugins.instant_page) { %>
  <script async src="<%- theme.plugins.instant_page %>" type="module" defer integrity="sha384-OeDn4XE77tdHo8pGtE1apMPmAipjoxUQ++eeJa6EtJCfHlvijigWiJpD7VDPWXV1"></script>
<% } %>
<% if (theme.footer.aplayer.enable) { %>
  <script async src="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js"></script>
  <script async src="https://cdn.jsdelivr.net/npm/meting@2.0/dist/Meting.min.js"></script>
<% } %>
<% if (theme.plugins.scrollreveal) { %>
  <script src="<%- theme.plugins.scrollreveal %>"></script>
  <script type="text/javascript">
    $(function() {
      const $reveal = $('.reveal');
      if ($reveal.length === 0) return;
      const sr = ScrollReveal({ distance: 0 });
      sr.reveal('.reveal');
    });
  </script>
<% } %>
<% if (theme.plugins.nodewaves && theme.plugins.nodewaves.js) { %>
  <%- js({src: theme.plugins.nodewaves.js, async: true }) %>
  <script type="text/javascript">
    $(function() {
      Waves.attach('.flat-btn', ['waves-button']);
      Waves.attach('.float-btn', ['waves-button', 'waves-float']);
      Waves.attach('.float-btn-light', ['waves-button', 'waves-float', 'waves-light']);
      Waves.attach('.flat-box', ['waves-block']);
      Waves.attach('.float-box', ['waves-block', 'waves-float']);
      Waves.attach('.waves-image');
      Waves.init();
    });
  </script>
<% } %>
<% if (theme.plugins.busuanzi) { %>
  <script async src="<%- theme.plugins.busuanzi %>"></script>
  <script>
    document.addEventListener('pjax:complete', function () {
      $('script[data-pjax], .pjax-reload script').each(function () {
        $(this).parent().append($(this).remove());
      });
    });
  </script>
<% } %>

<% if (theme.backstretch && theme.backstretch.enable && (theme.backstretch.images || page.images)) { %>
  <% var imgs = theme.backstretch.images || page.images; %>
  <% var posi = null;
  if (theme.backstretch.position == 'cover') {
    posi = '.cover';
  }
   %>
  <% if (imgs != undefined && theme.backstretch.position != undefined){ %>
    <%- js(theme.backstretch.js) %>
    <script type="text/javascript">
      $(function(){
        if ('<%- posi %>') {
          $('<%- posi %>').backstretch(
          <%- '["' + imgs.join('", "') + '"]' %>,
          {
            duration: "<%- theme.backstretch.duration %>",
            fade: "<%- theme.backstretch.fade %>"
          });
        } else {
          $.backstretch(
          <%- '["' + imgs.join('", "') + '"]' %>,
          {
            duration: "<%- theme.backstretch.duration %>",
            fade: "<%- theme.backstretch.fade %>"
          });
        }
      });
    </script>
  <% } %>
<% } %>


<%
  var enableDisqus = false;
  var enableLivere = false;
  var enableGitalk = false;
  var enableValine = false;
  if (page && page.comments == true) {
    if (config.disqus_shortname) {
      enableDisqus = true;
    }
    if (config.livere_uid) {
      enableLivere = true;
    }
    if (config.gitalk) {
      enableGitalk = true;
    }
    if (theme.valine.enable && config.leancloud) {
      enableValine = true;
    }
  }
%>
<% if (enableDisqus){ %>
  <script>
    var disqus_shortname = '<%= config.disqus_shortname %>';
    <% if (page.permalink){ %>
      var disqus_url = '<%= page.permalink %>';
    <% } %>
    (function(){
      var dsq = document.createElement('script');
      dsq.type = 'text/javascript';
      dsq.async = true;
      dsq.src = '//' + disqus_shortname + '.disqus.com/<% if (page.comments) { %>embed.js<% } else { %>count.js<% } %>';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
  </script>
<% } %>
<% if (enableLivere){ %>
  <script type="text/javascript">
    (function(d, s) {
      var j, e = d.getElementsByTagName(s)[0];
      if (typeof LivereTower === 'function') { return; }
      j = d.createElement(s);
      j.src = 'https://cdn-city.livere.com/js/embed.dist.js';
      j.async = true;
      e.parentNode.insertBefore(j, e);
    })(document, 'script');
  </script>
<% } %>
<% if (enableGitalk) { %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css">
  <script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"></script>
  <script type="text/javascript">
    var gitalk = new Gitalk({
      clientID: "<%- config.gitalk.clientID %>",
      clientSecret: "<%- config.gitalk.clientSecret %>",
      repo: "<%- config.gitalk.repo %>",
      owner: "<%- config.gitalk.owner %>",
      admin: "<%- config.gitalk.admin %>",
      <% if(page.gitalk && page.gitalk.id) { %>
        id: "<%= page.gitalk.id %>",
      <% } else { %>
        id: location.pathname,      // Ensure uniqueness and length less than 50
      <% } %>
      distractionFreeMode: false  // Facebook-like distraction free mode
    });
    gitalk.render('gitalk-container');
  </script>
<% } %>

<% if (enableValine){ %>
  <% if (config.use_cdn && theme.info && theme.info.cdn && theme.info.cdn.js && theme.info.cdn.js.valine) { %>
    <%- js(theme.info.cdn.js.valine) %>
  <% } else { %>
    <%- js(['js/valine.js']) %>
  <% } %>
  <script>
  var GUEST_INFO = ['nick','mail','link'];
  var guest_info = '<%= theme.valine.guest_info %>'.split(',').filter(function(item){
    return GUEST_INFO.indexOf(item) > -1
  });
  var notify = '<%= theme.valine.notify %>' == true;
  var verify = '<%= theme.valine.verify %>' == true;
  var valine = new Valine();
  valine.init({
    el: '#valine_container',
    notify: notify,
    verify: verify,
    guest_info: guest_info,
    <% if (page.valine && page.valine.path) { %>
      path: "<%= page.valine.path %>",
    <% } else if (config.leancloud.valine_path) { %>
      path: "<%= config.leancloud.valine_path %>",
    <% } %>
    appId: "<%= config.leancloud.app_id %>",
    appKey: "<%= config.leancloud.app_key %>",
    placeholder: "<%= (page.valine && page.valine.placeholder) ? page.valine.placeholder : theme.valine.placeholder %>",
    pageSize:'<%= theme.valine.pageSize %>',
    avatar:'<%= theme.valine.avatar %>',
    lang:'<%= theme.valine.lang %>',
    visitor: '<%- theme.valine.visitor %>',
    highlight:'<%= theme.valine.highlight %>'
  })
  </script>
<% } %>

<% if (config.use_cdn && theme.info && theme.info.cdn && theme.info.cdn.js && theme.info.cdn.js.app) { %>
  <%- js(theme.info.cdn.js.app) %>
<% } else { %>
  <%- js(['js/app.js']) %>
<% } %>
<% if (config.use_cdn && theme.info && theme.info.cdn && theme.info.cdn.js && theme.info.cdn.js.search) { %>
  <%- js(theme.info.cdn.js.search) %>
<% } else { %>
  <%- js(['js/search.js']) %>
<% } %>
<% if (theme.plugins.comment_typing) { %>
  <%- js(theme.plugins.comment_typing) %>
<%}%>

<!-- 复制 -->
<% if (theme.plugins.clipboard) { %>
  <%- partial('_third-party/clipboard') %>
<% } %>


<!-- fancybox -->
<% if (theme.plugins.fancybox) { %>
  <%- partial('_third-party/fancybox') %>
<% } %>


<% if (config.import && config.import.script){ %>
<% (config.import.script||[]).forEach(function(item){ %>
<%- item %><% }) %>
<% } %>



<script>
  var scrollCorrection = 96; // (header height = 64px) + (gap = 16px)
	const $headerAnchor = $('.l_header', '.cover-wrapper');
	if ($headerAnchor[0]) {
		scrollCorrection = $headerAnchor[0].clientHeight + 16;
	}
  function scrolltoElement(elem, correction) {
		correction = correction || scrollCorrection;
		const $elem = elem.href ? $(elem.getAttribute('href')) : $(elem);
		$('html, body').animate({
			'scrollTop': $elem.offset().top - correction
		}, 400);
	}
  function setScrollAnchor() {
		// button
		const $postsBtn = $('.menu .active');
		const $topBtn = $('.s-top');
		const $titleBtn = $('h1.title', '#header-meta');
		// anchor
		const $bodyAnchor = $('.l_body');
		// action
		if ($postsBtn.length && $bodyAnchor) {
			$postsBtn.click(e => {
				e.preventDefault();
				e.stopPropagation();
				scrolltoElement($bodyAnchor);
			});
		}
		if ($titleBtn.length && $bodyAnchor) {
			$titleBtn.click(e => {
				e.preventDefault();
				e.stopPropagation();
				scrolltoElement($bodyAnchor);
			});
		}
		if ($topBtn.length && $bodyAnchor) {
			$topBtn.click(e => {
				e.preventDefault();
				e.stopPropagation();
				scrolltoElement($bodyAnchor);
			});
		}

		const $coverAnchor = $('.cover-wrapper');
		var showHeaderPoint = 0;
		if ($coverAnchor[0]) {
			showHeaderPoint = $coverAnchor[0].clientHeight - 80;
		}
		var pos = document.body.scrollTop;
		$(document, window).scroll(() => {
			const scrollTop = $(window).scrollTop();
			const del = scrollTop - pos;
			pos = scrollTop;
			if (scrollTop > 150) {
				$topBtn.addClass('show');
				if (del > 0) {
					$topBtn.removeClass('hl');
				} else {
					$topBtn.addClass('hl');
				}
			} else {
				$topBtn.removeClass('show').removeClass('hl');
			}
			if (scrollTop > showHeaderPoint) {
				$headerAnchor.addClass('show');
			} else {
				$headerAnchor.removeClass('show');
			}
		});
	}

	function setHeaderMenuSelection() {
		var $headerMenu = $('body .navigation');
		// 先把已经激活的取消激活
		$headerMenu.find('li a.active').removeClass('active');
		// var $underline = $headerMenu.find('.underline');
		function setUnderline($item) {
			// if (!transition) $underline.addClass('disable-trans');
			if ($item && $item.length) {
				$item.addClass('active').siblings().removeClass('active');
			}
		}
		//set current active nav
		var $active_link = null;
		var idname = location.pathname.replace(/\/|%/g, "");
		if (idname.length == 0) {
			idname = "home";
		}
		var page = idname.match(/page\d{0,}$/g);
		if (page) {
			page = page[0];
			idname = idname.split(page)[0];
		}
		var index = idname.match(/index.html/);
		if (index) {
			index = index[0];
			idname = idname.split(index)[0];
		}
		if (idname && $headerMenu) {
			$active_link = $('#' + idname, $headerMenu);
			setUnderline($active_link);
		}
	}
  function setTocToggle() {
		const $toc = $('.toc-wrapper');
		if ($toc.length === 0) return;
		// $toc.click((e) => {
		//     e.stopPropagation();
		//     $toc.addClass('active');
		// });
		$(document).click(() => $toc.removeClass('active'));

		$toc.on('click', 'a', (e) => {
			e.preventDefault();
			e.stopPropagation();
			if (e.target.tagName === 'A') {
				scrolltoElement(e.target);
			} else if (e.target.tagName === 'SPAN') {
				scrolltoElement(e.target.parentElement);
			}
			$toc.removeClass('active');
		});

		const liElements = Array.from($toc.find('li a'));
		//function animate above will convert float to int.
		const getAnchor = () => liElements.map(elem => Math.floor($(elem.getAttribute('href')).offset().top - scrollCorrection));

		let anchor = getAnchor();
		const scrollListener = () => {
			const scrollTop = $('html').scrollTop() || $('body').scrollTop();
			if (!anchor) return;
			//binary search.
			let l = 0,
				r = anchor.length - 1,
				mid;
			while (l < r) {
				mid = (l + r + 1) >> 1;
				if (anchor[mid] === scrollTop) l = r = mid;
				else if (anchor[mid] < scrollTop) l = mid;
				else r = mid - 1;
			}
			$(liElements).removeClass('active').eq(l).addClass('active');
		}
		$(window)
			.resize(() => {
				anchor = getAnchor();
				scrollListener();
			})
			.scroll(() => {
				scrollListener()
			});
		scrollListener();
	}
  function pjax_fancybox() {
    $('article img').not('[hidden]').not('.fancybox-fix img').not('.vemojis img').not('.avatar').each(function() {
      var $image = $(this);
      var imageCaption = $image.attr('alt');
      var $imageWrapLink = $image.parent('a');
      if ($imageWrapLink.length < 1) {
        var src = this.getAttribute('src');
        var idx = src.lastIndexOf('?');
        if (idx != -1) {
          src = src.substring(0, idx);
        }
        $imageWrapLink = $image.wrap('<a href="' + src + '" style="display:block;text-align: center;"></a>').parent('a');
      }
      $imageWrapLink.attr('data-fancybox', 'images');
      if (imageCaption) {
        $imageWrapLink.attr('data-caption', imageCaption);
      }
    });
    $().fancybox({
      selector: '[data-fancybox="images"]',
      hash: false,
      loop: false,
      buttons: [
        "zoom",
        "close"
      ]
    });
  };
  setHeaderMenuSelection();
  setScrollAnchor();
  setTocToggle();
  document.addEventListener('pjax:complete', function () {
		setHeaderMenuSelection();
		setScrollAnchor();
    setTocToggle();
    pjax_fancybox();
  });

</script>
